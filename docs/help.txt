FlowKhfifDrif - Assistant de d√©veloppement en langage naturel

DESCRIPTION:
  FlowKhfifDrif est un outil en ligne de commande qui vous permet d'ex√©cuter
  des commandes Git et GitHub en utilisant un langage naturel simplifi√©.
  Il traduit vos instructions en commandes techniques et les ex√©cute pour vous.

UTILISATION:
  flowkhfifdrif [OPTIONS] "commande en langage naturel"

OPTIONS:
  -h, --help     Affiche cette aide
  --commands     Affiche des exemples de commandes
  -f             Mode Fork: Parall√©lisation intelligente sans attendre la fin
                 üß† IA int√©gr√©e: Optimise automatiquement les commandes multiples
                 ‚ö° NPM Smart: Combine "install-X && install-Y" ‚Üí "npm install X Y"
                 üîê Git Safe: Emp√™che la parall√©lisation dangereuse des workflows git
  -t             Mode Thread: Parall√©lisation intelligente avec attente de compl√©tion
                 üíæ Fiabilit√© garantie: Performance + s√©curit√© pour op√©rations critiques
                 üîÑ Synchronisation: Attend la compl√©tion de toutes les op√©rations parall√®les
  -s             Ex√©cute la commande dans un sous-shell (environnement isol√©)
                 üß™ Mode test: Parfait pour tester sans affecter l'environnement principal
  -l CHEMIN      Sp√©cifie un r√©pertoire de logs alternatif
  -r             R√©initialise les param√®tres (‚ö†Ô∏è DOIT √™tre ex√©cut√© avec sudo)
  --ai           Active les fonctionnalit√©s d'IA avec Gemini (n√©cessite GEMINI_API_KEY)

EXEMPLES:
  # Commandes de base
  flowkhfifdrif "init MyApp true ./chemin/destination"
  flowkhfifdrif "push-main \"Initial commit\""
  flowkhfifdrif "branch-feature"
  flowkhfifdrif "clean"
  
  # Nouvelles commandes de logs
  flowkhfifdrif "commit-5"         # Affiche les 5 derniers commits
  flowkhfifdrif "commit-10"        # Affiche les 10 derniers commits  
  flowkhfifdrif "logs"             # Affiche le fichier history.log complet
  
  # Parall√©lisation intelligente avec optimisations automatiques
  flowkhfifdrif -f "install-express && install-mongoose && install-dotenv"
  ‚Üí Auto-optimis√© en: npm install express mongoose dotenv
  
  flowkhfifdrif -f "clone repo1 && clone repo2"
  ‚Üí Vrais clones parall√®les (op√©rations ind√©pendantes)
  
  flowkhfifdrif -t "push-backup-main \"Correction critique\""
  ‚Üí Push s√©curis√© avec backup automatique + attente de compl√©tion
  
  # Mode test isol√©
  flowkhfifdrif -s "install-react"

CONFIGURATION:
  Pour utiliser les commandes GitHub, d√©finissez ces variables d'environnement:
  export GITHUB_USER="votre_nom_utilisateur"
  export GITHUB_TOKEN="votre_token"
  export GIT_USER_EMAIL="votre_email"

  Pour utiliser l'option --ai, d√©finissez:
  export GEMINI_API_KEY="votre_cl√©_api_gemini"

FICHIERS:
  ~/.flowkhfifdrif/            R√©pertoire principal
  ~/.flowkhfifdrif/lib/        Biblioth√®ques (logger.sh, parser.sh, etc.)
  ~/.flowkhfifdrif/logs/       Fichiers de journalisation
  ~/.flowkhfifdrif/docs/       Documentation

JOURNALISATION:
  Tous les √©v√©nements sont enregistr√©s dans ~/.flowkhfifdrif/logs/history.log
  Utilisez "flowkhfifdrif clean" pour nettoyer les logs et fichiers temporaires.

Pour plus d'exemples, utilisez l'option --commands
